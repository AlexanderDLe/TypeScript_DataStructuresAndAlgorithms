import PalindromicSubstrings from './PalindromicSubstrings';
import ClimbingStairs from './ClimbingStairs';
import HouseRobber1 from './HouseRobber1';
import HouseRobber3 from './HouseRobber3';
import BestTimeToBuyAndSellStockWithCooldown from './BestTimeToBuyAndSellStockWithCooldown';
import PerfectSquares from './PerfectSquares';
import PartitionEqualSubsetSum from './PartitionEqualSubsetSum';
import LongestIncreasingSubsequence from './LongestIncreasingSubsequence';
import CoinChange from './CoinChange';
import JumpGame from './JumpGame';
import BurstBalloons from './BurstBalloons';
import HouseRobber2 from './HouseRobber2';
import PalindromePartitioning from './PalindromePartitioning';
import MaxSubsetSumNoAdjacent from './MaxSubsetSumNoAdjacent';
import NumberOfWaysToMakeChange from './NumberOfWaysToMakeChange';
import MinNumberOfCoinsForChange from './MinNumberOfCoinsForChange';
import LevenshteinDistance from './LevenshteinDistance';
import NumberOfWaysToTraverseGraph from './NumberOfWaysToTraverseGraph';
import MaxSumIncreasingSubsequence from './MaxSumIncreasingSubsequence';
import LongestCommonSubsequence from './LongestCommonSubsequence';
import MinNumberOfJumps from './MinNumberOfJumps';
import WaterArea from './WaterArea';
import KnapsackProblem from './KnapsackProblem';
import RangeSumQueryImmutable from './RangeSumQueryImmutable';
import LetterCasePermutation from './LetterCasePermutation';
import TargetSum from './TargetSum';
import GeneralizedAbbreviation from './GeneralizedAbbreviation';
import MaximumProductSubarray from './MaximumProductSubarray';
import LongestPalindromicSubstring from './LongestPalindromicSubstring';
import DecodeWays from './DecodeWays';
import NumberOfLongestIncreasingSubsequence from './NumberOfLongestIncreasingSubsequence';

const DPMain = () => {
  // BestTimeToBuyAndSellStockWithCooldown();
  // BurstBalloons();
  // ClimbingStairs();
  // CoinChange();
  // DecodeWays();
  // GeneralizedAbbreviation();
  // HouseRobber1();
  // HouseRobber2();
  // HouseRobber3();
  // JumpGame();
  // KnapsackProblem();
  // LevenshteinDistance();
  // LetterCasePermutation();
  // LongestCommonSubsequence();
  // LongestIncreasingSubsequence();
  // LongestPalindromicSubstring();
  // MaximumProductSubarray();
  // MaxSubsetSumNoAdjacent();
  // MaxSumIncreasingSubsequence();
  // MinNumberOfCoinsForChange();
  // MinNumberOfJumps();
  // NumberOfLongestIncreasingSubsequence();
  // NumberOfWaysToMakeChange();
  // NumberOfWaysToTraverseGraph();
  // PalindromePartitioning();
  // PartitionEqualSubsetSum();
  // PalindromicSubstrings();
  // PerfectSquares();
  // RangeSumQueryImmutable();
  // TargetSum();
  // WaterArea();
};

export default DPMain;
