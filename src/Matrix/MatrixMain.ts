import RotateImage from './RotateImage';
import UniquePaths from './UniquePaths';
import MinimumPathSum from './MinimumPathSum';
import NumberOfIslands from './NumberOfIslands';
import SearchA2DMatrix2 from './SearchA2DMatrix2';
import MaximalSquare from './MaximalSquare';
import WordSearch from './WordSearch';
import GameOfLife from './GameOfLife';
import KthSmallestElementInSortedMatrix from './KthSmallestElementInSortedMatrix';
import ValidSudoku from './ValidSudoku';
import SetMatrixZeroes from './SetMatrixZeroes';
import RottingOranges from './RottingOranges';
import SpiralTraversal from './SpiralTraversal';
import RiverSizes from './RiverSizes';
import RemoveIslands from './RemoveIslands';
import ZigZagTraversal from './ZigZagTraversal';
import WaterfallStreams from './WaterfallStreams';
import MinimumPassesOfMatrix from './MinimumPassesOfMatrix';
import BoggleBoard from './BoggleBoard';
import Convert1DArrayInto2DArray from './Convert1DArrayInto2DArray';
import PacificAtlanticWaterFlow from './PacificAtlanticWaterFlow';
import ShortedPathInAGridWithObstaclesElimination from './ShortedPathInAGridWithObstaclesElimination';
import MaximumNumberOfPointsWithCost from './MaximumNumberOfPointsWithCost';
import MinimumFallingPathSum from './MinimumFallingPathSum';
import RemoveAllOnesWithRowAndColumnFlips from './RemoveAllOnesWithRowAndColumnFlips';
import MakingALargeIsland from './MakingALargeIsland';
import ShortestPathInBinaryMatrix from './ShortestPathInBinaryMatrix';
import ShortestDistanceFromAllBuildings from './ShortestDistanceFromAllBuildings';
import ToeplitzMatrix from './ToeplitzMatrix';
import IslandPerimeter from './IslandPerimeter';
import DiagonalTraverse from './DiagonalTraverse';
import LeftmostColumnWithAtLeastAOne from './LeftmostColumnWithAtLeastAOne';

export default () => {
  // BoggleBoard();
  // Convert1DArrayInto2DArray()
  // DiagonalTraverse();
  // GameOfLife();
  // IslandPerimeter();
  // KthSmallestElementInSortedMatrix();
  // LeftmostColumnWithAtLeastAOne();
  // MakingALargeIsland();
  // MaximumNumberOfPointsWithCost();
  // MaximalSquare();
  // MinimumFallingPathSum();
  // MinimumPathSum();
  // MinimumPassesOfMatrix();
  // NumberOfIslands();
  // PacificAtlanticWaterFlow();
  // RemoveIslands();
  // RemoveAllOnesWithRowAndColumnFlips();
  // RiverSizes();
  // RotateImage();
  // RottingOranges();
  // SearchA2DMatrix2();
  // SetMatrixZeroes();
  // ShortestDistanceFromAllBuildings();
  // ShortestPathInBinaryMatrix();
  // ShortedPathInAGridWithObstaclesElimination();
  // SpiralTraversal();
  // ToeplitzMatrix();
  // WordSearch();
  // UniquePaths();
  // ValidSudoku();
  // WaterfallStreams();
  // ZigZagTraversal();
};
