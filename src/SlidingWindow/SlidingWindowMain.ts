import AverageContiguousSubarraysOfSizeK from "./AverageContiguousSubarraysOfSizeK";
import FindAllAnagramsInAString from "./FindAllAnagramsInAString";
import FruitsIntoBasketGrokking from "./FruitsIntoBasketGrokking";
import FruitsIntoBasketLeetcode from "./FruitsIntoBasketLeetcode";
import LongestRepeatingCharacterReplacement from "./LongestRepeatingCharacterReplacement";
import LongestSubstringWithMaxKDistinctChars from "./LongestSubstringWithMaxKDistinctChars";
import LongestSubstringWithOnesAfterReplacement from "./LongestSubstringWithOnesAfterReplacement";
import LongestSubstringWithOnlyDistinctChars from "./LongestSubstringWithOnlyDistinctChars.ts";
import LongestSubstringWithoutRepeatingCharacters from "./LongestSubstringWithoutRepeatingCharacters";
import LongestSubstringWithSameLettersAfterReplacement from "./LongestSubstringWithSameLettersAfterReplacement.ts";
import MaximumSumSubarrayOfSizeK from "./MaximumSumSubarrayOfSizeK";
import MinimumSizeSubarraySum from "./MinimumSizeSubarraySum";
import MinimumSwapsToGroupAll1sTogether from "./MinimumSwapsToGroupAll1sTogether";
import MinimumWindowSubstring from "./MinimumWindowSubstring";
import PermutationInAStringGrokking from "./PermutationInAStringGrokking";
import PermutationInAStringLeetcode from "./PermutationInAStringLeetcode";
import RepeatedDNASequences from "./RepeatedDNASequences";
import SlidingWindowMaximum from "./SlidingWindowMaximum";
import SmallestSubarrayWithGreaterSum from "./SmallestSubarrayWithGreaterSum";
import SmallestWindowContainingSubstr from "./SmallestWindowContainingSubstr";
import StringAnagrams from "./StringAnagrams";
import SubstringWithConcatenationOfAllWords from "./SubstringWithConcatenationOfAllWords";
import WordsConcatenation from "./WordsConcatenation";


const SlidingWindowMain = () => {
  // AverageContiguousSubarraysOfSizeK();
  // FindAllAnagramsInAString();
  // FruitsIntoBasketGrokking();
  // FruitsIntoBasketLeetcode();
  // LongestRepeatingCharacterReplacement();
  // LongestSubstringWithOnlyDistinctChars();
  // LongestSubstringWithMaxKDistinctChars();
  // LongestSubstringWithoutRepeatingCharacters();
  // LongestSubstringWithOnesAfterReplacement();
  // LongestSubstringWithSameLettersAfterReplacement();
  // MaximumSumSubarrayOfSizeK();
  // MinimumSizeSubarraySum();
  // MinimumSwapsToGroupAll1sTogether();
  // MinimumWindowSubstring();
  // PermutationInAStringLeetcode();
  // PermutationInAStringGrokking();
  // RepeatedDNASequences();
  // SlidingWindowMaximum();
  // SmallestWindowContainingSubstr();
  // SmallestSubarrayWithGreaterSum();
  // SubstringWithConcatenationOfAllWords();
  // StringAnagrams();
  // WordsConcatenation();
};

export default SlidingWindowMain;
