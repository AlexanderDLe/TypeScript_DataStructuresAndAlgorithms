"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const TreesMain_1 = __importDefault(require("./Trees/TreesMain"));
const ArraysMain_1 = __importDefault(require("./Arrays/ArraysMain"));
const BinaryMain_1 = __importDefault(require("./Binary/BinaryMain"));
const LinkedListMain_1 = __importDefault(require("./LinkedLists/LinkedListMain"));
const HeapsMain_1 = __importDefault(require("./Heaps/HeapsMain"));
const MathMain_1 = __importDefault(require("./Math/MathMain"));
const MatrixMain_1 = __importDefault(require("./Matrix/MatrixMain"));
const QueuesMain_1 = __importDefault(require("./Queues/QueuesMain"));
const RecursionMain_1 = __importDefault(require("./Recursion/RecursionMain"));
const StacksMain_1 = __importDefault(require("./Stacks/StacksMain"));
const SortingMain_1 = __importDefault(require("./Sorting/SortingMain"));
const StringsMain_1 = __importDefault(require("./Strings/StringsMain"));
const DPMain_1 = __importDefault(require("./DP/DPMain"));
const GraphsMain_1 = __importDefault(require("./Graphs/GraphsMain"));
const Sketch_1 = __importDefault(require("./Sketch"));
const SlidingWindowMain_1 = __importDefault(require("./SlidingWindow/SlidingWindowMain"));
const FastAndSlowPointersMain_1 = __importDefault(require("./FastAndSlowPointers/FastAndSlowPointersMain"));
const IntervalsMain_1 = __importDefault(require("./Intervals/IntervalsMain"));
const CyclicSortMain_1 = __importDefault(require("./CyclicSort/CyclicSortMain"));
const LinkedListReversalMain_1 = __importDefault(require("./LinkedListReversal/LinkedListReversalMain"));
const TreeBFSMain_1 = __importDefault(require("./TreeBFS/TreeBFSMain"));
const TreeDFSMain_1 = __importDefault(require("./TreeDFS/TreeDFSMain"));
const TwoHeapsMain_1 = __importDefault(require("./TwoHeaps/TwoHeapsMain"));
const SubsetsMain_1 = __importDefault(require("./Subsets/SubsetsMain"));
const TopKElementsMain_1 = __importDefault(require("./TopKElements/TopKElementsMain"));
const KWayMergeMain_1 = __importDefault(require("./KWayMerge/KWayMergeMain"));
const KnapsackDPMain_1 = __importDefault(require("./KnapsackDP/KnapsackDPMain"));
const TopologicalGraphSortMain_1 = __importDefault(require("./TopologicalGraphSort/TopologicalGraphSortMain"));
const GreedyMain_1 = __importDefault(require("./Greedy/GreedyMain"));
const BinarySearchMain_1 = __importDefault(require("./BinarySearch/BinarySearchMain"));
const ObjectOrientationMain_1 = __importDefault(require("./ObjectOrientation/ObjectOrientationMain"));
const BinarySearchTreeMain_1 = __importDefault(require("./BinarySearchTree/BinarySearchTreeMain"));
const PointersMain_1 = __importDefault(require("./Pointers/PointersMain"));
const TrieMain_1 = __importDefault(require("./Trie/TrieMain"));
function main() {
    (0, Sketch_1.default)();
    (0, ArraysMain_1.default)();
    (0, BinaryMain_1.default)();
    (0, BinarySearchMain_1.default)();
    (0, BinarySearchTreeMain_1.default)();
    (0, CyclicSortMain_1.default)();
    (0, DPMain_1.default)();
    (0, FastAndSlowPointersMain_1.default)();
    (0, GraphsMain_1.default)();
    (0, GreedyMain_1.default)();
    (0, HeapsMain_1.default)();
    (0, IntervalsMain_1.default)();
    (0, LinkedListReversalMain_1.default)();
    (0, LinkedListMain_1.default)();
    (0, KnapsackDPMain_1.default)();
    (0, KWayMergeMain_1.default)();
    (0, MathMain_1.default)();
    (0, MatrixMain_1.default)();
    (0, ObjectOrientationMain_1.default)();
    (0, PointersMain_1.default)();
    (0, QueuesMain_1.default)();
    (0, RecursionMain_1.default)();
    (0, SortingMain_1.default)();
    (0, SlidingWindowMain_1.default)();
    (0, StacksMain_1.default)();
    (0, StringsMain_1.default)();
    (0, SubsetsMain_1.default)();
    (0, TopKElementsMain_1.default)();
    (0, TopologicalGraphSortMain_1.default)();
    (0, TreeBFSMain_1.default)();
    (0, TreeDFSMain_1.default)();
    (0, TreesMain_1.default)();
    (0, TrieMain_1.default)();
    (0, TwoHeapsMain_1.default)();
}
main();
